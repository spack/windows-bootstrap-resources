ARG MINGW_REPO=ghcr.io/spack/
ARG MINGW_VERSION=latest
FROM ${MINGW_REPO}mingw-w64:${MINGW_VERSION}

ARG GNUPG_VERSION=2.4.5
ARG ICONV_VERSION=1.16
ARG LIBASSUAN_VERSION=2.5.5
ARG LIBGCRYPT_VERSION=1.10.2
ARG LIBGPGERROR_VERSION=1.47
ARG LIBKSBA_VERSION=1.6.3
ARG NPTH_VERSION=1.6
ARG PINENTRY_VERSION=1.2.1

RUN mkdir -p /sources/tarballs /opt/deps /opt/gpg
ENV DEP_PREFIX=/opt/deps
ENV PREFIX=/opt/gpg
WORKDIR /sources/tarballs
# Fetch sources
RUN curl -L --remote-name-all\
    https://gnupg.org/ftp/gcrypt/gnupg/gnupg-$GNUPG_VERSION.tar.bz2 \
    https://gnupg.org/ftp/gcrypt/npth/npth-$NPTH_VERSION.tar.bz2 \
    https://gnupg.org/ftp/gcrypt/libgpg-error/libgpg-error-$LIBGPGERROR_VERSION.tar.bz2 \
    https://gnupg.org/ftp/gcrypt/libgcrypt/libgcrypt-$LIBGCRYPT_VERSION.tar.bz2 \
    https://gnupg.org/ftp/gcrypt/libksba/libksba-$LIBKSBA_VERSION.tar.bz2 \
    https://gnupg.org/ftp/gcrypt/libassuan/libassuan-$LIBASSUAN_VERSION.tar.bz2 \
    https://gnupg.org/ftp/gcrypt/pinentry/pinentry-$PINENTRY_VERSION.tar.bz2 \
    https://ftp.gnu.org/gnu/libiconv/libiconv-$ICONV_VERSION.tar.gz

WORKDIR /sources/source
# Extract sources
RUN tar -oxf /sources/tarballs/gnupg-$GNUPG_VERSION.tar.bz2
RUN tar -oxf /sources/tarballs/npth-$NPTH_VERSION.tar.bz2
RUN tar -oxf /sources/tarballs/libgcrypt-$LIBGCRYPT_VERSION.tar.bz2
RUN tar -oxf /sources/tarballs/libksba-$LIBKSBA_VERSION.tar.bz2
RUN tar -oxf /sources/tarballs/libassuan-$LIBASSUAN_VERSION.tar.bz2
RUN tar -oxf /sources/tarballs/pinentry-$PINENTRY_VERSION.tar.bz2
RUN tar -oxf /sources/tarballs/libiconv-$ICONV_VERSION.tar.gz
RUN tar -oxf /sources/tarballs/libgpg-error-$LIBGPGERROR_VERSION.tar.bz2

WORKDIR /sources/source

# install npth
RUN cd npth-$NPTH_VERSION && \
    ./configure \
        --host=x86_64-w64-mingw32 \
        --prefix="${DEP_PREFIX}" \
        --enable-shared=no \
        --enable-static=yes \
        CFLAGS="-Os" && \
    make -j$(nproc) && \
    make install

# install libgpg-error
RUN cd libgpg-error-$LIBGPGERROR_VERSION && \
    ./configure \
        --host=x86_64-w64-mingw32 \
        --prefix="${DEP_PREFIX}" \
        --enable-shared=no \
        --enable-static=yes \
        --disable-nls \
        --disable-doc \
        --disable-languages \
        CFLAGS="-Os" \
 && make -j$(nproc) \
 && make install \
 && cp src/gpg-error-config /opt/deps/bin/

# install libassuan
RUN cd libassuan-$LIBASSUAN_VERSION && \
    ./configure \
        --host=x86_64-w64-mingw32 \
        --prefix="${DEP_PREFIX}" \
        --enable-shared=no \
        --enable-static=yes \
        --with-libgpg-error-prefix="${DEP_PREFIX}" \
        CFLAGS="-Os" \
 && make -j$(nproc) \
 && make install

RUN cd libgcrypt-$LIBGCRYPT_VERSION &&\
    ./configure \
        --host=x86_64-w64-mingw32 \
        --prefix="${DEP_PREFIX}" \
        --enable-shared=no \
        --enable-static=yes \
        --disable-doc \
        --with-libgpg-error-prefix="${DEP_PREFIX}" \
        CFLAGS="-Os" \
 && make -j$(nproc) \
 && make install

RUN cd libksba-$LIBKSBA_VERSION && \
    ./configure \
        --host=x86_64-w64-mingw32 \
        --prefix="${DEP_PREFIX}" \
        --enable-shared=no \
        --enable-static=yes \
        --with-libgpg-error-prefix="${DEP_PREFIX}" \
 && make -j$(nproc) \
 && make install

RUN cd gnupg-$GNUPG_VERSION && \
    ./configure \
        --host=x86_64-w64-mingw32 \
        --prefix="${PREFIX}" \
        --with-npth-prefix="${DEP_PREFIX}" \
        --with-libgpg-error-prefix="${DEP_PREFIX}" \
        --with-libgcrypt-prefix="${DEP_PREFIX}" \
        --with-libassuan-prefix="${DEP_PREFIX}" \
        --with-ksba-prefix="${DEP_PREFIX}" \
        --disable-bzip2 \
        --disable-card-support \
        --disable-ccid-driver \
        --disable-dirmngr \
        --disable-doc \
        --disable-gnutls \
        --disable-gpg-blowfish \
        --disable-gpg-cast5 \
        --disable-gpg-idea \
        --disable-gpg-md5 \
        --disable-gpg-rmd160 \
        --disable-gpgtar \
        --disable-ldap \
        --disable-libdns \
        --disable-nls \
        --disable-ntbtls \
        --disable-photo-viewers \
        --disable-regex \
        --disable-scdaemon \
        --disable-sqlite \
        --disable-wks-tools \
        --disable-zip \
        CFLAGS="-Os -fcommon" \
        LDFLAGS="-static -s" \
        LIBS="-lws2_32" \
 && make -j$(nproc) \
 && make install

RUN cd libiconv-$ICONV_VERSION && \
    ./configure \
        --host=x86_64-w64-mingw32 \
        --prefix="${DEP_PREFIX}" \
        --enable-shared=no \
        --enable-static=yes \
        --disable-nls \
        --disable-dependency-tracking \
        CFLAGS="-Os" \
 && make -j$(nproc) \
 && make install

RUN cd pinentry-$PINENTRY_VERSION &&\
    ./configure \
        --host=x86_64-w64-mingw32 \
        --prefix="${PREFIX}" \
        --with-libgpg-error-prefix="${DEP_PREFIX}" \
        --with-libassuan-prefix="${DEP_PREFIX}" \
        --with-libiconv-prefix="${DEP_PREFIX}" \
        --disable-ncurses \
        --disable-libsecret \
        --disable-pinentry-tty \
        --disable-pinentry-curses \
        --disable-pinentry-emacs \
        --disable-inside-emacs \
        --disable-pinentry-gtk2 \
        --disable-pinentry-gnome3 \
        --disable-pinentry-qt \
        --disable-pinentry-tqt \
        --disable-pinentry-fltk \
        LDFLAGS="-static -s" \
        LIBS="-lws2_32" \
 && make -j$(nproc) \
 && cp w32/pinentry-w32.exe $PREFIX/bin/pinentry.exe